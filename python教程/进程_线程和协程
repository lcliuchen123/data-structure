
进程：可执行程序实例，即二进制可执行文件实例。每个CPU同一时刻只能处理一个进程。multiprocessing
线程：是程序的实际执行者。threading
协程：不是被操作系统内核所管理，而完全是由程序所控制（也就是在用户态执行）gevent
好处：协程之间的切换效率很高。
对于操作系统来说，线程是最小的执行单元，进程是最小的资源分配单元。
一个进程可以拥有多个进程，一个进程可以拥有多个协程。
python的多线程是假的，因为全局解释器锁（GIL)的存在，每个线程执行前都会获取GIL，保证同一时刻只有一个
线程执行代码，这样可以保证数据的安全。
多进程应用于计算密集型（没有延迟),多线程应用于I/O密集型（文件读写）。
因为python调用的是c语言的接口，需要知道上下文信息，GIL是解释器的问题，解决起来很困难。
解决GIL的方法：换python解释器，使用其他语言代替。
python可以利用多线程调用其他语言。